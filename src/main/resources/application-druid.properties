#===================================================================================================
#	全局连接池配置(通常来说，只需要修改initialSize、minIdle、maxActive
#===================================================================================================
# 初始化时建立物理连接的个数
spring.datasource.druid.initial-size = 10
# 最小连接池数量
spring.datasource.druid.min-idle = 5
# 最大连接池数量
spring.datasource.druid.max-active = 20
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait = 60000
# 查询超时时间
spring.datasource.druid.login-timeout = 36000
# 查询超时时间
spring.datasource.druid.query-timeout = 20
# 事务查询超时时间
spring.datasource.druid.transaction-query-timeout = 20000
# 默认只读设置
spring.datasource.druid.default-read-only = false
# 超过时间限制是否回收
spring.datasource.druid.remove-abandoned=true
# 超过时间限制多长
spring.datasource.druid.remove-abandoned-timeout=180
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=300000
spring.datasource.druid.validation-query=SELECT 'x'
# spring.datasource.druid.validation-query-timeout=
spring.datasource.druid.test-while-idle=true
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
# 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false。removeabandoned不建议在生产环境中打开如果用SQL Server，建议追加配置)
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# spring.datasource.druid.max-open-prepared-statements=和上面的等价

#===================================================================================================
#	filters配置
#===================================================================================================
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙,配置多个英文逗号分隔
spring.datasource.druid.filters= stat,wall
# 是否开启慢sql查询监控
spring.datasource.druid.filter.stat.log-slow-sql=true
# 慢SQL执行时间
spring.datasource.druid.filter.stat.slow-sql-millis=1

# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
# 是否启用StatFilter默认值true
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,*.html,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=false
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=admin
spring.datasource.druid.web-stat-filter.principal-cookie-name=admin
spring.datasource.druid.web-stat-filter.profile-enable=true

# StatViewServlet配置
# 展示Druid的统计信息,StatViewServlet的用途包括：1.提供监控信息展示的html页面2.提供监控信息的JSON API
# 是否启用StatViewServlet默认值true
spring.datasource.druid.stat-view-servlet.enabled=true
# 根据配置中的url-pattern来访问内置监控页面，如果是上面的配置，内置监控页面的首页是/druid/admin/index.html例如：
# http://localhost:8080/druid/admin/index.html
spring.datasource.druid.stat-view-servlet.url-pattern=/admin/*
# 允许清空统计数据
spring.datasource.druid.stat-view-servlet.reset-enable=true
# 配置监控页面访问登录名称
spring.datasource.druid.stat-view-servlet.login-username=admin
# 配置监控页面访问密码
spring.datasource.druid.stat-view-servlet.login-password=admin


