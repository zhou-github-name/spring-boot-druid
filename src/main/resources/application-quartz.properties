#===================================================================================================
#	配置JobStore
#===================================================================================================
# 使用自己的配置文件
org.quartz.jobStore.useProperties = true
# 存储方式使用JobStoreTX，也就是数据库
org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
org.quartz.jobStore.driverDelegateClass = org.quartz.impl.jdbcjobstore.StdJDBCDelegate
# 是否使用集群（如果项目只部署到 一台服务器，就不用了）
org.quartz.jobStore.isClustered = true
# 调度实例失效的检查时间间隔 ms
org.quartz.jobStore.clusterCheckinInterval = 20000
# 数据库中quartz表的表名前缀，默认QRTZ_
org.quartz.jobStore.tablePrefix = qrtz_
#org.quartz.jobStore.dataSource = quartz

#===================================================================================================
#	配置quartz数据源
#===================================================================================================
#spring.datasource.druid.quartz.driver-class-name = com.mysql.cj.jdbc.Driver
#spring.datasource.druid.quartz.url = jdbc:mysql://192.168.248.40:3306/amcms?allowMultiQueries=true&useUnicode=true&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=Asia/Shanghai
#spring.datasource.druid.quartz.user = amcms_4_dev
#spring.datasource.druid.quartz.password = amcms4%DEV

#===================================================================================================
#	Scheduler调度器属性配置
#===================================================================================================
# 调度标识名 集群中每一个实例都必须使用相同的名称
org.quartz.scheduler.instanceName = MyScheduler
# 如果使用集群，instanceId必须唯一，设置成AUTO
org.quartz.scheduler.instanceId = AUTO
org.quartz.scheduler.rmi.export = false
org.quartz.scheduler.rmi.proxy = false
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false

#===================================================================================================
#	配置ThreadPool
#===================================================================================================
# 线程池的实现类（一般使用SimpleThreadPool即可满足几乎所有用户的需求）
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
# 指定线程数，一般设置为1-100直接的整数，根据系统资源配置
org.quartz.threadPool.threadCount = 10
# 设置线程的优先级(可以是Thread.MIN_PRIORITY（即1）和Thread.MAX_PRIORITY（这是10）之间的任何int 。默认值为Thread.NORM_PRIORITY（5）。)
org.quartz.threadPool.threadPriority = 5
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
